CREATE TABLE USER
(
	USER_ID INT(5) NOT NULL AUTO_INCREMENT,
	USER_NICK VARCHAR(20) NOT NULL UNIQUE,
	USER_PASS VARCHAR(40) NOT NULL,
	USER_NAME VARCHAR(40) NOT NULL,
	USER_PRIVACY TINYINT(1) NOT NULL,
	USER_BIRTH DATE NOT NULL,
	USER_COUNTRY VARCHAR(20) NOT NULL,
	USER_MAIL VARCHAR(40) NOT NULL,
	USER_TELF INT(9) NOT NULL,
	USER_DESCRIPTION VARCHAR(100) NOT NULL,
	USER_RATING INT(1) NOT NULL,
	USER_IMAGE VARCHAR(150),
	USER_FECHAMOD DATETIME NOT NULL,

	PRIMARY KEY(USER_ID)
);

CREATE TABLE SECURITY
(
	SEC_USER_ID INT(5) NOT NULL,
	SEC_AUTH_TOKEN VARCHAR(50) NOT NULL,
	SEC_DISPOSITIVO VARCHAR(50) NOT NULL,
	
	PRIMARY KEY (SEC_USER_ID, SEC_AUTH_TOKEN),
	FOREIGN KEY (SEC_USER_ID) REFERENCES USER (USER_ID)
	ON DELETE CASCADE
);

CREATE TABLE FRIENDSHIP
(
	FRIEND_USER_ID INT(5) NOT NULL,
	FRIEND_ID INT(5) NOT NULL,
	FRIEND_STATE TINYINT(1) NOT NULL,
	FRIEND_FECHAMOD DATETIME NOT NULL,

	PRIMARY KEY(FRIEND_USER_ID, FRIEND_ID),
	FOREIGN KEY (FRIEND_USER_ID) REFERENCES USER(USER_ID)
	ON DELETE CASCADE,
	FOREIGN KEY (FRIEND_ID) REFERENCES USER(USER_ID)
	ON DELETE CASCADE
);

CREATE TABLE PLACE
(
	PLACE_CREATOR_ID INT(5) NOT NULL,
	PLACE_ID INT(5) NOT NULL AUTO_INCREMENT,
	PLACE_CATEGORY VARCHAR(20) NOT NULL,
	PLACE_NAME VARCHAR(20) NOT NULL,
	PLACE_DESCRIPTION VARCHAR(100) NOT NULL,
	PLACE_IMAGE VARCHAR(150) NOT NULL,
	PLACE_LATITUDE FLOAT(8,5) NOT NULL,
	PLACE_LONGITUDE FLOAT(8,5) NOT NULL,
	PLACE_RATING VARCHAR(20) NOT NULL,
	PLACE_FECHAMOD DATETIME NOT NULL,

	PRIMARY KEY (PLACE_ID),
	FOREIGN KEY (PLACE_CREATOR_ID) REFERENCES USER (USER_ID)
	ON DELETE CASCADE
);

CREATE TABLE REVIEW
(
	REVIEW_USER_ID INT(5) NOT NULL,
	REVIEW_PLACE_ID INT(5) NOT NULL,
	REVIEW_TITLE VARCHAR(20) NOT NULL,
	REVIEW_DESCRIPTION VARCHAR(100) NOT NULL,
	REVIEW_RATING INT(1) NOT NULL,
	REVIEW_FECHAMOD DATETIME NOT NULL,

	PRIMARY KEY(REVIEW_USER_ID, REVIEW_PLACE_ID),
	FOREIGN KEY (REVIEW_USER_ID) REFERENCES USER (USER_ID)
	ON DELETE CASCADE,
	FOREIGN KEY (REVIEW_PLACE_ID) REFERENCES PLACE (PLACE_ID)
	ON DELETE CASCADE
);

CREATE TABLE FAVOURITES
(
	FAVOURITES_USER_ID INT(5) NOT NULL,
	FAVOURITES_PLACE_ID INT(5) NOT NULL,
	FAVOURITES_STATE TINYINT(1) NOT NULL,
	FAVOURITES_FECHAMOD DATETIME NOT NULL,

	PRIMARY KEY(FAVOURITES_USER_ID, FAVOURITES_PLACE_ID),
	FOREIGN KEY (FAVOURITES_USER_ID) REFERENCES USER (USER_ID)
	ON DELETE CASCADE,
	FOREIGN KEY (FAVOURITES_PLACE_ID) REFERENCES PLACE (PLACE_ID)
	ON DELETE CASCADE
);


DELIMITER $$
CREATE TRIGGER T_PLACE_M
AFTER UPDATE ON PLACE
FOR EACH ROW
BEGIN
	UPDATE USER
	SET USER_RATING = (SELECT AVG(PLACE_RATING) FROM PLACE WHERE PLACE_ID = OLD.PLACE_ID),
		USER_FECHAMOD = SYSDATE()
	WHERE USER_ID = OLD.PLACE_CREATOR_ID;
END $$

CREATE TRIGGER T_REVIEW_A
AFTER INSERT ON REVIEW
FOR EACH ROW
BEGIN
	UPDATE PLACE
	SET PLACE_RATING = (SELECT AVG(REVIEW_RATING) FROM REVIEW WHERE REVIEW_PLACE_ID = NEW.REVIEW_PLACE_ID),
		PLACE_FECHAMOD = SYSDATE()
	WHERE PLACE_ID = NEW.REVIEW_PLACE_ID;
END $$
DELIMITER ;